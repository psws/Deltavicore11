add library Microsoft.EntityFrameworkCore.Design


Next do the Add-Migration
Add-Migration [-Name] <String> [-OutputDir <String>] [-Context <String>] [-Environment <String>] [-Project <String>] [-StartupProject <String>] [<CommonParameters>]
RELATED LINKS
    Remove-Migration
    Update-Database
    about_EntityFrameworkCore 

REMARKS
    To see the examples, type: "get-help Add-Migration -examples".
    For more information, type: "get-help Add-Migration -detailed".
    For technical information, type: "get-help Add-Migration -full".
    For online help, type: "get-help Add-Migration -online"

PM> Add-Migration -Project Expenses.data.entityframework -StartupProject Deltavicore11.web_app -Context ExpenseDbContext -OutputDir Migrations -Name "InitialDatabaseCreation" 

 Remove-Migration -Project Expenses.core -StartupProject Deltavicore11.web_app



Update-Database [[-Migration] <String>] [-Context <String>] [-Environment <String>] [-Project <String>] [-StartupProject <String>] [<CommonParameters>]
-Migration <String>
        The target migration. If '0', all migrations will be reverted. Defaults to the last migration.
-Environment <String>
        The environment to use. Defaults to "Development".
<CommonParameters>
        This cmdlet supports the common parameters: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable, and OutVariable. For more information, see 
        about_CommonParameters (http://go.microsoft.com/fwlink/?LinkID=113216). 

PM> Update-Database -Project Expenses.data.entityframework -StartupProject Deltavicore11.web_app -Context ExpenseDbContext
There is no seed method with this uodate. Seeding happens when app is 1st run


NO MIGRATION IS REQUIRED:
-------------------------------

The DbInitializer.cs:Initializer method has the folloeing code
               context.Database.EnsureCreated();//if db is not exist ,it will create database .but ,do nothing .

                logger?.LogInformation("{0} has been invoked", nameof(DbInitializer));
                // Look for any students.
                if (context.Set<Provider>().Any())
                {
                    return;   // DB has been seeded
                }
	This code will generate DB and call the seed method.