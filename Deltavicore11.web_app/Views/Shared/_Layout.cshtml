@*@inject Microsoft.ApplicationInsights.AspNetCore.JavaScriptSnippet JavaScriptSnippet*@

@using Microsoft.Extensions.Options

@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Hosting;

@*@using AspNetCoreInjectConfigurationRazor.Configuration;*@
@inject IOptions<OptionsAppSettings>  OptionsAppSettings;

@inject IHttpContextAccessor context;
@inject IHostingEnvironment env;
@using Deltavicore11.web_app.Models;
@using Deltavicore11.web_app.Helpers;

@{
    //string baseUrl = OptionsAppSettings.Value.ApplicationUrl;
    //https://stackoverflow.com/questions/39864550/how-to-get-base-url-without-accessing-a-request
    string baseUrl = $"{context.HttpContext.Request.Scheme}://{context.HttpContext.Request.Host.ToUriComp‌​onent()}/";
    var version = OptionsAppSettings.Value.ApplicationVersion;
    var envName = env.EnvironmentName;
    string bundleInformationJSON = string.Empty;

    if (envName != "Development")
    {
        //https://gist.github.com/mohamedmansour/cd50123f8575daba7a7f12847b12da5d
        List<CustomBundle> bundles = Deltavicore11.web_app.Helpers.Bundling.GetAppBundles(envName, env.ContentRootPath);


        BundleInformation bundleInformation = new BundleInformation();
        bundleInformation.Bundles = bundles;
        bundleInformationJSON = Newtonsoft.Json.JsonConvert.SerializeObject(bundleInformation, Newtonsoft.Json.Formatting.None);
    }

}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Deltavicore11.web_app</title>




    <environment names="Development">
        @*<script src="~/lib/jquery/dist/jquery.js"></script>
            <script src="~/js/jqueryBundle.js"></script>
            <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
            <script src="~/js/bootstrapBundle.js"></script>
        *@

        <script src="~/lib/angular/angular.js"></script>

        @*<script src="~/lib/angular-route/angular-route.js"></script>*@
        @*<script src="~/lib/angular-ui-router/release/ui-router-angularjs.js"></script>*@

        <script src="~/lib/angular-ui-router/release/angular-ui-router.js"></script>





        <script src="~/lib/angular-bootstrap/ui-bootstrap.js"></script>
        <script src="~/lib/angular-bootstrap/ui-bootstrap-tpls.js"></script>
        @*<script src="~/lib/angular-touch/angular-touch.js"></script>*@
        <script src="~/lib/angular-animate/angular-animate.js"></script>
        <script src="~/lib/angular-sanitize/angular-sanitize.js"></script>
       <script src="~/lib/angular-ui-tab-scroll/angular-ui-tab-scroll.js"></script>
   
        <script src="~/lib/angular-ui-grid/ui-grid.js"></script>
       <script src="~/lib/pdfmake/build/pdfmake.js"></script>
        <script src="~/lib/pdfmake/build/vfs_fonts.js"></script>
        <script src="~/lib/csv/lib/csv.js"></script>

       
        

        @*<script src="https://rawgit.com/VersifitTechnologies/angular-ui-tab-scroll/master/angular-ui-tab-scroll.js"></script>
            <link rel="stylesheet" href="https://rawgit.com/VersifitTechnologies/angular-ui-tab-scroll/master/angular-ui-tab-scroll.css" />*@

        <script src="~/lib/angular-block-ui/dist/angular-block-ui.js"></script>
        @*<script src="~/js/angularBundle.js"></script>*@


    </environment>

    <environment names="Staging,Production">
        @*<script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-2.2.0.min.js"
                    asp-fallback-src="~/lib/jquery/dist/jquery.min.js"
                    asp-fallback-test="window.jQuery"
                    crossorigin="anonymous"
                    integrity="sha384-K+ctZQ+LL8q6tP7I94W+qzQsfRV2a+AfHIi9k8z8l9ggpc8X+Ytst4yBo/hH+8Fk">
            </script>
            <script src="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/bootstrap.min.js"
                    asp-fallback-src="~/lib/bootstrap/dist/js/bootstrap.min.js"
                    asp-fallback-test="window.jQuery && window.jQuery.fn && window.jQuery.fn.modal"
                    crossorigin="anonymous"
                    integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa">
            </script>*@
        @*<script src="~/lib/respond/dest/respond.min.js"></script>*@


        <script src="~/js/angularBundle.min.js"></script>
    </environment>

    <environment names="Development,Staging,Production">
        <script src="~/lib/requirejs/require.js"></script>

    </environment>


    <environment names="Development">
        <link rel="stylesheet" href="~/css/cssBundle.css" />

        @*<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
            <link rel="stylesheet" href="~/lib/font-awesome/css/font-awesome.css" />
            <link rel="stylesheet" href="~/lib/angular-ui-tab-scroll/angular-ui-tab-scroll.css" />
            <link rel="stylesheet" href="~/lib/angular-block-ui/dist/angular-block-ui.css" />
        <link rel="stylesheet" href="~/lib/angular-ui-grid/ui-grid.css" />*@

    </environment>
    <environment names="Staging,Production">
        <link rel="stylesheet" href="~/css/cssBundle.min.css" />
    </environment>


    <environment names="Development">
        <link rel="stylesheet" href="~/app/css/site.css" />
        <link rel="stylesheet" href="~/app/css/deltavi.css" />
        @*<link rel="stylesheet" href="~/wwwroot/lib/angular-ui-tab-scroll/angular-ui-tab-scroll.css" />*@


    </environment>
    <environment names="Staging,Production">
        @*<link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css"
            asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
            asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />*@
        <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
        <link rel="stylesheet" href="~/css/deltavi.min.css" />
    </environment>




    @*@Html.Raw(JavaScriptSnippet.FullScript)*@

    <base href="@baseUrl" name="base" />



</head>

<body ng-app="deltavi" ng-controller="masterController as vm" ng-init="vm.initializeController()">
    <div ng-controller="NavigationCtrl as vm" ng-init="vm.initializeController()">
        <div class="navbar navbar-inverse navbar-fixed-top" style="content:normal !important; display:inline !important">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" ng-click="vm.toggleCollapse()">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <span class="navbar-brand"><a href="/">Deltavi</a></span>
                </div>
                <div class="navbar-collapse" style="overflow:hidden!important;" uib-collapse="vm.isCollapsed">
                    <ul class="nav navbar-nav" ng-click="vm.Collapse()">

                        @*<li><a href="Home/Index">Home</a></li>*@
                        @*<li><a href="Home/Contact">Contact Us</a></li>*@
                        @*<li><a href="Home/About">About</a></li>*@
                        <li ui-sref-active="active"><a ui-sref="production">Production</a></li>*
                        <li ui-sref-active="active"><a ui-sref="expense">Expenses</a></li>*
                        <li ui-sref-active="active"><a ui-sref="sales">Sales</a></li>*
                        <li ui-sref-active="active"><a ui-sref="salary">Salary</a></li>*
                        <li ui-sref-active="active" ><a ui-sref="admin">Admin</a></li>*
                    </ul>
                    <ul class="nav navbar-nav navbar-right" ng-click="vm.toggleCollapse()">
                        <li ui-sref-active="active"><a ui-sref="/home/contact">Contact</a></li>*
                        <li ui-sref-active="active"><a ui-sref="/home/about">About</a></li>*

                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="container body-content">

        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year PSWS Deltavi application @version</p>
        </footer>
    </div>



    <environment names="Development">
        <script src="~/app/js/site.js" asp-append-version="true"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="~/js/site.min.js" asp-append-version="true"></script>
    </environment>

    <environment names="Development">
        <script src="~/app/app.module.js" asp-append-version="true"></script>
        <script src="~/app/services/tab.service.js" asp-append-version="true"></script>
       <script src="~/app/Navigation.controller.js" asp-append-version="true"></script>
        <script src="~/app/services/resolver.service.js" ></script>
        <script src="~/app/app.config.js" asp-append-version="true"></script>


        <script src="~/app/services/ajaxService.js" asp-append-version="true"></script>
        <script src="~/app/services/alertService.js" asp-append-version="true"></script>

        <script src="~/app/master.Controller.js" asp-append-version="true"></script>
        @*<script src="~/js/startupBundle.min.js"></script>*@

    </environment>
    <environment names="Staging,Production">
        <script src="~/js/startupBundle.min.js"></script>
    </environment>


    @*<environment names="Development,Staging,Production">
            <script src="~/js/servicesBundle.js"></script>
        </environment>*@




    <script>
        console.log("applicationConfiguration start");

        (function () {
            var app = angular.module('deltavi');
            app.provider('applicationConfiguration', function () {
                var _version;
                var _bundles;
                var _envName;
                var tmp = 5;
                return {
                    setVersion: function (version) {
                        _version = version;
                    },
                    setBundles: function (bundles) {
                        _bundles = JSON.parse(bundles);
                    },
                    getVersion: function () {
                        return _version;
                    },
                    setEnv: function (envName) {
                        _envName = envName;
                    },
                    getEnv: function (envName) {
                        return _envName;
                    },
                    getBundle: function (bundleName) {
                        var Path = '';
                        for (var i = 0; i < _bundles.Bundles.length; i++) {
                            if (bundleName.toLowerCase() == _bundles.Bundles[i].BundleName) {
                                Path=  _bundles.Bundles[i].Path;
                            }
                        }
                        return Path;
                    },
                    IsLoaded: function (bundleName) {
                        var bVal = false;
                        for (var i = 0; i < _bundles.Bundles.length; i++) {
                            if (bundleName.toLowerCase() == _bundles.Bundles[i].BundleName) {
                                if (_bundles.Bundles[i].IsLoaded) {
                                    bVal = true;
                                }
                            }
                        }
                        return bVal;
                    },
                    SetLoaded: function (bundleName) {
                        for (var i = 0; i < _bundles.Bundles.length; i++) {
                            if (bundleName.toLowerCase() == _bundles.Bundles[i].BundleName) {
                                _bundles.Bundles[i].IsLoaded = true;
                            }
                        }
                    },

                    $get: function () {
                        return {
                            version: _version,
                            bundles: _bundles,
                            envName: _envName,

                        }
                    }
                }
            });

            app.config(function (applicationConfigurationProvider) {
                applicationConfigurationProvider.setVersion('@version');
                applicationConfigurationProvider.setEnv('@envName');
                if ( applicationConfigurationProvider.getEnv() != "Development") {
                    applicationConfigurationProvider.setBundles('@Html.Raw(bundleInformationJSON)');
                }
            });

        })();
        console.log("applicationConfiguration end");

    </script>


    <environment names="Development">
        <script src="~/app/app.uirouting.js" asp-append-version="true"></script>
        @*<script src="~/app/app.routing.js" ></script>*@

    </environment>

    <environment names="Staging,Production">
        <script src="~/js/routingBundle.min.js"></script>
    </environment>



    @*<script src="~/app/home/index.controller.js" asp-append-version="true"></script>*@
    @*<script src="~/app/components/contact.js"></script>
    <script src="~/app/components/about.js"></script>
    <script src="~/app/components/index.js"></script>*@






    @*http://stackoverflow.com/questions/23327578/what-is-rendersection-in-asp-net-mvc*@
    @RenderSection("Scripts", required: false)
</body>

</html>
